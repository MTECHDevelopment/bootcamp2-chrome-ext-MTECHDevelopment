name: CI - Build e Testes E2E

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: extensao_popup
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'extensao_popup/package-lock.json'

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Instalar navegadores do Playwright
        run: npx playwright install --with-deps chromium

      - name: Build da extens√£o
        run: npm run build

      - name: Instalar Xvfb (runner headless X)
        run: sudo apt-get update && sudo apt-get install -y xvfb dbus-x11

      - name: Executar testes E2E (com X virtual)
        run: xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' npm run test:e2e
        continue-on-error: true

      - name: Publicar relat√≥rio do Playwright
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Publicar resultados JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Publicar pacote da extens√£o
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip
          path: dist/extension.zip
          retention-days: 90

      - name: Publicar dist completo
        uses: actions/upload-artifact@v4
        with:
          name: extension-dist
          path: dist/
          retention-days: 30

  release:
    needs: test-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    defaults:
      run:
        working-directory: extensao_popup
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Download artefato da extens√£o
        uses: actions/download-artifact@v4
        with:
          name: extension-zip
          path: ./artifacts

      - name: Obter vers√£o do manifest
        id: get_version
        run: |
          VERSION=$(node -p "require('./manifest.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Vers√£o encontrada: ${VERSION}"

      - name: Criar Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## üöÄ Release Autom√°tico
            
            Extens√£o Chrome buildada e testada automaticamente via CI/CD.
            
            ### üì¶ Instala√ß√£o
            1. Baixe o arquivo `extension.zip`
            2. Descompacte em uma pasta local
            3. Abra `chrome://extensions/` no Chrome
            4. Ative o "Modo do desenvolvedor"
            5. Clique em "Carregar sem compacta√ß√£o"
            6. Selecione a pasta descompactada
            
            ### ‚úÖ Testes
            - Todos os testes E2E passaram
            - Relat√≥rio dispon√≠vel nos artefatos do workflow
            
            ---
            **Build:** ${{ github.sha }}
            **Data:** ${{ github.event.head_commit.timestamp }}
          files: |
            ./artifacts/extension.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
